/*   Copyright (C) 2013-2014 Computer Sciences Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ezbake.services.centralPurge.thrift;

import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CentralAgeOffEventState implements org.apache.thrift.TBase<CentralAgeOffEventState, CentralAgeOffEventState._Fields>, java.io.Serializable, Cloneable, Comparable<CentralAgeOffEventState> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CentralAgeOffEventState");

  private static final org.apache.thrift.protocol.TField APPLICATION_STATES_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationStates", org.apache.thrift.protocol.TType.MAP, (short)1);
  private static final org.apache.thrift.protocol.TField AGE_OFF_EVENT_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("ageOffEventInfo", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField CENTRAL_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("centralStatus", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField AGE_OFF_RULE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("AgeOffRuleId", org.apache.thrift.protocol.TType.I64, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CentralAgeOffEventStateStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CentralAgeOffEventStateTupleSchemeFactory());
  }

  public Map<String,ApplicationPurgeState> applicationStates; // required
  public AgeOffEventInfo ageOffEventInfo; // required
  /**
   * 
   * @see CentralPurgeStatus
   */
  public CentralPurgeStatus centralStatus; // required
  public long AgeOffRuleId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    APPLICATION_STATES((short)1, "applicationStates"),
    AGE_OFF_EVENT_INFO((short)2, "ageOffEventInfo"),
    /**
     * 
     * @see CentralPurgeStatus
     */
    CENTRAL_STATUS((short)3, "centralStatus"),
    AGE_OFF_RULE_ID((short)4, "AgeOffRuleId");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // APPLICATION_STATES
          return APPLICATION_STATES;
        case 2: // AGE_OFF_EVENT_INFO
          return AGE_OFF_EVENT_INFO;
        case 3: // CENTRAL_STATUS
          return CENTRAL_STATUS;
        case 4: // AGE_OFF_RULE_ID
          return AGE_OFF_RULE_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AGEOFFRULEID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.APPLICATION_STATES, new org.apache.thrift.meta_data.FieldMetaData("applicationStates", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ApplicationPurgeState.class))));
    tmpMap.put(_Fields.AGE_OFF_EVENT_INFO, new org.apache.thrift.meta_data.FieldMetaData("ageOffEventInfo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AgeOffEventInfo.class)));
    tmpMap.put(_Fields.CENTRAL_STATUS, new org.apache.thrift.meta_data.FieldMetaData("centralStatus", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, CentralPurgeStatus.class)));
    tmpMap.put(_Fields.AGE_OFF_RULE_ID, new org.apache.thrift.meta_data.FieldMetaData("AgeOffRuleId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CentralAgeOffEventState.class, metaDataMap);
  }

  public CentralAgeOffEventState() {
  }

  public CentralAgeOffEventState(
    Map<String,ApplicationPurgeState> applicationStates,
    AgeOffEventInfo ageOffEventInfo,
    CentralPurgeStatus centralStatus,
    long AgeOffRuleId)
  {
    this();
    this.applicationStates = applicationStates;
    this.ageOffEventInfo = ageOffEventInfo;
    this.centralStatus = centralStatus;
    this.AgeOffRuleId = AgeOffRuleId;
    setAgeOffRuleIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CentralAgeOffEventState(CentralAgeOffEventState other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetApplicationStates()) {
      Map<String,ApplicationPurgeState> __this__applicationStates = new HashMap<String,ApplicationPurgeState>(other.applicationStates.size());
      for (Map.Entry<String, ApplicationPurgeState> other_element : other.applicationStates.entrySet()) {

        String other_element_key = other_element.getKey();
        ApplicationPurgeState other_element_value = other_element.getValue();

        String __this__applicationStates_copy_key = other_element_key;

        ApplicationPurgeState __this__applicationStates_copy_value = new ApplicationPurgeState(other_element_value);

        __this__applicationStates.put(__this__applicationStates_copy_key, __this__applicationStates_copy_value);
      }
      this.applicationStates = __this__applicationStates;
    }
    if (other.isSetAgeOffEventInfo()) {
      this.ageOffEventInfo = new AgeOffEventInfo(other.ageOffEventInfo);
    }
    if (other.isSetCentralStatus()) {
      this.centralStatus = other.centralStatus;
    }
    this.AgeOffRuleId = other.AgeOffRuleId;
  }

  public CentralAgeOffEventState deepCopy() {
    return new CentralAgeOffEventState(this);
  }

  @Override
  public void clear() {
    this.applicationStates = null;
    this.ageOffEventInfo = null;
    this.centralStatus = null;
    setAgeOffRuleIdIsSet(false);
    this.AgeOffRuleId = 0;
  }

  public int getApplicationStatesSize() {
    return (this.applicationStates == null) ? 0 : this.applicationStates.size();
  }

  public void putToApplicationStates(String key, ApplicationPurgeState val) {
    if (this.applicationStates == null) {
      this.applicationStates = new HashMap<String,ApplicationPurgeState>();
    }
    this.applicationStates.put(key, val);
  }

  public Map<String,ApplicationPurgeState> getApplicationStates() {
    return this.applicationStates;
  }

  public CentralAgeOffEventState setApplicationStates(Map<String,ApplicationPurgeState> applicationStates) {
    this.applicationStates = applicationStates;
    return this;
  }

  public void unsetApplicationStates() {
    this.applicationStates = null;
  }

  /** Returns true if field applicationStates is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationStates() {
    return this.applicationStates != null;
  }

  public void setApplicationStatesIsSet(boolean value) {
    if (!value) {
      this.applicationStates = null;
    }
  }

  public AgeOffEventInfo getAgeOffEventInfo() {
    return this.ageOffEventInfo;
  }

  public CentralAgeOffEventState setAgeOffEventInfo(AgeOffEventInfo ageOffEventInfo) {
    this.ageOffEventInfo = ageOffEventInfo;
    return this;
  }

  public void unsetAgeOffEventInfo() {
    this.ageOffEventInfo = null;
  }

  /** Returns true if field ageOffEventInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetAgeOffEventInfo() {
    return this.ageOffEventInfo != null;
  }

  public void setAgeOffEventInfoIsSet(boolean value) {
    if (!value) {
      this.ageOffEventInfo = null;
    }
  }

  /**
   * 
   * @see CentralPurgeStatus
   */
  public CentralPurgeStatus getCentralStatus() {
    return this.centralStatus;
  }

  /**
   * 
   * @see CentralPurgeStatus
   */
  public CentralAgeOffEventState setCentralStatus(CentralPurgeStatus centralStatus) {
    this.centralStatus = centralStatus;
    return this;
  }

  public void unsetCentralStatus() {
    this.centralStatus = null;
  }

  /** Returns true if field centralStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCentralStatus() {
    return this.centralStatus != null;
  }

  public void setCentralStatusIsSet(boolean value) {
    if (!value) {
      this.centralStatus = null;
    }
  }

  public long getAgeOffRuleId() {
    return this.AgeOffRuleId;
  }

  public CentralAgeOffEventState setAgeOffRuleId(long AgeOffRuleId) {
    this.AgeOffRuleId = AgeOffRuleId;
    setAgeOffRuleIdIsSet(true);
    return this;
  }

  public void unsetAgeOffRuleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGEOFFRULEID_ISSET_ID);
  }

  /** Returns true if field AgeOffRuleId is set (has been assigned a value) and false otherwise */
  public boolean isSetAgeOffRuleId() {
    return EncodingUtils.testBit(__isset_bitfield, __AGEOFFRULEID_ISSET_ID);
  }

  public void setAgeOffRuleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGEOFFRULEID_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case APPLICATION_STATES:
      if (value == null) {
        unsetApplicationStates();
      } else {
        setApplicationStates((Map<String,ApplicationPurgeState>)value);
      }
      break;

    case AGE_OFF_EVENT_INFO:
      if (value == null) {
        unsetAgeOffEventInfo();
      } else {
        setAgeOffEventInfo((AgeOffEventInfo)value);
      }
      break;

    case CENTRAL_STATUS:
      if (value == null) {
        unsetCentralStatus();
      } else {
        setCentralStatus((CentralPurgeStatus)value);
      }
      break;

    case AGE_OFF_RULE_ID:
      if (value == null) {
        unsetAgeOffRuleId();
      } else {
        setAgeOffRuleId((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case APPLICATION_STATES:
      return getApplicationStates();

    case AGE_OFF_EVENT_INFO:
      return getAgeOffEventInfo();

    case CENTRAL_STATUS:
      return getCentralStatus();

    case AGE_OFF_RULE_ID:
      return Long.valueOf(getAgeOffRuleId());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case APPLICATION_STATES:
      return isSetApplicationStates();
    case AGE_OFF_EVENT_INFO:
      return isSetAgeOffEventInfo();
    case CENTRAL_STATUS:
      return isSetCentralStatus();
    case AGE_OFF_RULE_ID:
      return isSetAgeOffRuleId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CentralAgeOffEventState)
      return this.equals((CentralAgeOffEventState)that);
    return false;
  }

  public boolean equals(CentralAgeOffEventState that) {
    if (that == null)
      return false;

    boolean this_present_applicationStates = true && this.isSetApplicationStates();
    boolean that_present_applicationStates = true && that.isSetApplicationStates();
    if (this_present_applicationStates || that_present_applicationStates) {
      if (!(this_present_applicationStates && that_present_applicationStates))
        return false;
      if (!this.applicationStates.equals(that.applicationStates))
        return false;
    }

    boolean this_present_ageOffEventInfo = true && this.isSetAgeOffEventInfo();
    boolean that_present_ageOffEventInfo = true && that.isSetAgeOffEventInfo();
    if (this_present_ageOffEventInfo || that_present_ageOffEventInfo) {
      if (!(this_present_ageOffEventInfo && that_present_ageOffEventInfo))
        return false;
      if (!this.ageOffEventInfo.equals(that.ageOffEventInfo))
        return false;
    }

    boolean this_present_centralStatus = true && this.isSetCentralStatus();
    boolean that_present_centralStatus = true && that.isSetCentralStatus();
    if (this_present_centralStatus || that_present_centralStatus) {
      if (!(this_present_centralStatus && that_present_centralStatus))
        return false;
      if (!this.centralStatus.equals(that.centralStatus))
        return false;
    }

    boolean this_present_AgeOffRuleId = true;
    boolean that_present_AgeOffRuleId = true;
    if (this_present_AgeOffRuleId || that_present_AgeOffRuleId) {
      if (!(this_present_AgeOffRuleId && that_present_AgeOffRuleId))
        return false;
      if (this.AgeOffRuleId != that.AgeOffRuleId)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_applicationStates = true && (isSetApplicationStates());
    builder.append(present_applicationStates);
    if (present_applicationStates)
      builder.append(applicationStates);

    boolean present_ageOffEventInfo = true && (isSetAgeOffEventInfo());
    builder.append(present_ageOffEventInfo);
    if (present_ageOffEventInfo)
      builder.append(ageOffEventInfo);

    boolean present_centralStatus = true && (isSetCentralStatus());
    builder.append(present_centralStatus);
    if (present_centralStatus)
      builder.append(centralStatus.getValue());

    boolean present_AgeOffRuleId = true;
    builder.append(present_AgeOffRuleId);
    if (present_AgeOffRuleId)
      builder.append(AgeOffRuleId);

    return builder.toHashCode();
  }

  @Override
  public int compareTo(CentralAgeOffEventState other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetApplicationStates()).compareTo(other.isSetApplicationStates());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationStates()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationStates, other.applicationStates);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgeOffEventInfo()).compareTo(other.isSetAgeOffEventInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgeOffEventInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ageOffEventInfo, other.ageOffEventInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCentralStatus()).compareTo(other.isSetCentralStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCentralStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.centralStatus, other.centralStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAgeOffRuleId()).compareTo(other.isSetAgeOffRuleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgeOffRuleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.AgeOffRuleId, other.AgeOffRuleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CentralAgeOffEventState(");
    boolean first = true;

    sb.append("applicationStates:");
    if (this.applicationStates == null) {
      sb.append("null");
    } else {
      sb.append(this.applicationStates);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ageOffEventInfo:");
    if (this.ageOffEventInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.ageOffEventInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("centralStatus:");
    if (this.centralStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.centralStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("AgeOffRuleId:");
    sb.append(this.AgeOffRuleId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (applicationStates == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'applicationStates' was not present! Struct: " + toString());
    }
    if (ageOffEventInfo == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ageOffEventInfo' was not present! Struct: " + toString());
    }
    if (centralStatus == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'centralStatus' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'AgeOffRuleId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
    if (ageOffEventInfo != null) {
      ageOffEventInfo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CentralAgeOffEventStateStandardSchemeFactory implements SchemeFactory {
    public CentralAgeOffEventStateStandardScheme getScheme() {
      return new CentralAgeOffEventStateStandardScheme();
    }
  }

  private static class CentralAgeOffEventStateStandardScheme extends StandardScheme<CentralAgeOffEventState> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CentralAgeOffEventState struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // APPLICATION_STATES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map36 = iprot.readMapBegin();
                struct.applicationStates = new HashMap<String,ApplicationPurgeState>(2*_map36.size);
                for (int _i37 = 0; _i37 < _map36.size; ++_i37)
                {
                  String _key38;
                  ApplicationPurgeState _val39;
                  _key38 = iprot.readString();
                  _val39 = new ApplicationPurgeState();
                  _val39.read(iprot);
                  struct.applicationStates.put(_key38, _val39);
                }
                iprot.readMapEnd();
              }
              struct.setApplicationStatesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AGE_OFF_EVENT_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.ageOffEventInfo = new AgeOffEventInfo();
              struct.ageOffEventInfo.read(iprot);
              struct.setAgeOffEventInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CENTRAL_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.centralStatus = CentralPurgeStatus.findByValue(iprot.readI32());
              struct.setCentralStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AGE_OFF_RULE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.AgeOffRuleId = iprot.readI64();
              struct.setAgeOffRuleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetAgeOffRuleId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'AgeOffRuleId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CentralAgeOffEventState struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.applicationStates != null) {
        oprot.writeFieldBegin(APPLICATION_STATES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.applicationStates.size()));
          for (Map.Entry<String, ApplicationPurgeState> _iter40 : struct.applicationStates.entrySet())
          {
            oprot.writeString(_iter40.getKey());
            _iter40.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.ageOffEventInfo != null) {
        oprot.writeFieldBegin(AGE_OFF_EVENT_INFO_FIELD_DESC);
        struct.ageOffEventInfo.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.centralStatus != null) {
        oprot.writeFieldBegin(CENTRAL_STATUS_FIELD_DESC);
        oprot.writeI32(struct.centralStatus.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AGE_OFF_RULE_ID_FIELD_DESC);
      oprot.writeI64(struct.AgeOffRuleId);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CentralAgeOffEventStateTupleSchemeFactory implements SchemeFactory {
    public CentralAgeOffEventStateTupleScheme getScheme() {
      return new CentralAgeOffEventStateTupleScheme();
    }
  }

  private static class CentralAgeOffEventStateTupleScheme extends TupleScheme<CentralAgeOffEventState> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CentralAgeOffEventState struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.applicationStates.size());
        for (Map.Entry<String, ApplicationPurgeState> _iter41 : struct.applicationStates.entrySet())
        {
          oprot.writeString(_iter41.getKey());
          _iter41.getValue().write(oprot);
        }
      }
      struct.ageOffEventInfo.write(oprot);
      oprot.writeI32(struct.centralStatus.getValue());
      oprot.writeI64(struct.AgeOffRuleId);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CentralAgeOffEventState struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TMap _map42 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.applicationStates = new HashMap<String,ApplicationPurgeState>(2*_map42.size);
        for (int _i43 = 0; _i43 < _map42.size; ++_i43)
        {
          String _key44;
          ApplicationPurgeState _val45;
          _key44 = iprot.readString();
          _val45 = new ApplicationPurgeState();
          _val45.read(iprot);
          struct.applicationStates.put(_key44, _val45);
        }
      }
      struct.setApplicationStatesIsSet(true);
      struct.ageOffEventInfo = new AgeOffEventInfo();
      struct.ageOffEventInfo.read(iprot);
      struct.setAgeOffEventInfoIsSet(true);
      struct.centralStatus = CentralPurgeStatus.findByValue(iprot.readI32());
      struct.setCentralStatusIsSet(true);
      struct.AgeOffRuleId = iprot.readI64();
      struct.setAgeOffRuleIdIsSet(true);
    }
  }

}

